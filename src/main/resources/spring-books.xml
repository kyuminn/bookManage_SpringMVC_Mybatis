<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- @Autowired 어노테이션 읽어들이기 -->
	<context:annotation-config/>
	
	<!-- board 패키지 아래 @Controller, @Repository, @Service 어노테이션 붙은 클래스에 대한 객체 자동 생성 -->
	<context:component-scan base-package="books"/>
	
	<!-- MultipartResolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1000000000"/>
		<property name="maxInMemorySize" value="1000000000"></property>
	</bean>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="user" value="bookmanager"/>
		<property name="password" value="1234"/>
		<property name="maxPoolSize" value="100"/>
		<property name="maxIdleTime" value="600"/>
		<property name="idleConnectionTestPeriod" value="300"/>
	</bean>
	
	<!-- MyBatis와 연동 시 사용하는 SqlSessionFactory, SqlSessionTemplate -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:config/mybatis-config.xml"/>
		<!--  <property name="typeAliasesPackage" value="board.vo"/>--> <!-- @Alias annotation 읽어들이기 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:config/sqlmap-book.xml</value>
			</list>
		</property>
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>
</beans>